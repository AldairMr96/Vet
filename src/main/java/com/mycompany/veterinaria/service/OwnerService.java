package com.mycompany.veterinaria.service;import com.mycompany.veterinaria.model.Owner;import com.mycompany.veterinaria.repository.IOwnerRespository;import jakarta.persistence.EntityNotFoundException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class OwnerService implements IOwnerService {    @Autowired(required = true)    private IOwnerRespository duenhoRespository;    @Override    public Owner saveOwner(Owner owner) {       return duenhoRespository.save(owner);    }    @Override    public void deleteOwner(Long idOwner) {        if (!duenhoRespository.existsById(idOwner)) {            throw new EntityNotFoundException("Owner not exist");        }        duenhoRespository.deleteById(idOwner);    }    @Override    public List<Owner> getOwners() {        List<Owner> ownerList = duenhoRespository.findAll();        return ownerList;    }    @Override    public Owner editOwner(Owner owner) {        Owner resultOwner = this.findOneOwner(owner.getIdOwner());        resultOwner.setDni(owner.getDni());        resultOwner.setOwnerName(owner.getOwnerName());        resultOwner.setOwnerLastname(owner.getOwnerLastname());        resultOwner.setOwnerCellphone(owner.getOwnerCellphone());        Owner ownerSave = this.saveOwner(resultOwner);        return ownerSave;    }    @Override    public Owner findOneOwner(Long idOwner) {        Owner owner = duenhoRespository.findById(idOwner)                .orElseThrow(()->new EntityNotFoundException("Owner not found"));        return owner;    }}