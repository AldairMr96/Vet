package com.mycompany.veterinaria.service;import com.mycompany.veterinaria.dto.PetDTO;import com.mycompany.veterinaria.model.Pet;import com.mycompany.veterinaria.repository.IPetRepository;import jakarta.persistence.EntityNotFoundException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.ArrayList;import java.util.List;@Servicepublic class PetService implements IPetService {    @Autowired    IPetRepository mascotaRepository;    @Override    public Pet savePet(Pet pet) {        return    mascotaRepository.save(pet);    }    @Override    public void deletePet(Long idPet) {        if(!mascotaRepository.existsById(idPet)){            throw new EntityNotFoundException("Pet not exist");        }        mascotaRepository.deleteById(idPet);    }    @Override    public List<Pet> getPets() {        List<Pet> petList = mascotaRepository.findAll();        return petList;    }    @Override    public Pet editPet(Pet pet) {        Pet resultPet = this.findOnePet(pet.getIdPet());        resultPet.setPetName(pet.getPetName());        resultPet.setSpecies(pet.getSpecies());        resultPet.setRace(pet.getRace());        resultPet.setColor(pet.getColor());        Pet petSave = this.savePet(pet);        return petSave;    }    @Override    public Pet findOnePet(Long idPet) {        Pet petReslt =   mascotaRepository.findById(idPet)                .orElseThrow(()->new EntityNotFoundException("Pet not found"));        return petReslt;    }    @Override    public List<PetDTO> findPetDTO() {        List<PetDTO> petDTOS = new ArrayList<>();        List<Pet> petList = this.getPets();        PetDTO petDTO = new PetDTO();        for (Pet pet : petList) {            petDTO.setPetName(pet.getPetName());            petDTO.setSpecies(pet.getSpecies());            petDTO.setRace(pet.getRace());            petDTO.setOwnerName(pet.getOwner().getOwnerName());            petDTO.setOwnerLastname(pet.getOwner().getOwnerLastname());            petDTOS.add(petDTO);             petDTO = new PetDTO(); //Reset        }        return petDTOS;    }}