package com.mycompany.veterinaria.controller;import com.mycompany.veterinaria.dto.PetDTO;import com.mycompany.veterinaria.model.Pet;import com.mycompany.veterinaria.service.IPetService;import jakarta.persistence.EntityNotFoundException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/vet-clinic/pet")public class PetController {    @Autowired    private IPetService petService;    @GetMapping("/get")    @ResponseStatus(HttpStatus.OK)    public List<Pet> getMascotas (){        return  petService.getPets();    }    @GetMapping("/get/onepet")    public ResponseEntity<?> findOneMascota (@RequestParam Long idPet){        try {            Pet pet = petService.findOnePet(idPet);            return  ResponseEntity.ok(pet);        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (RuntimeException ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }    @GetMapping ("/get/petDTO")    public  List<PetDTO> findPetDTO (){        return petService.findPetDTO();    }    @PostMapping("/save")    @ResponseStatus(HttpStatus.CREATED)    public Pet saveMascota (@RequestBody Pet pet){        return petService.savePet(pet);    }    @PutMapping("/edit")    public ResponseEntity<?>  editMascota (@RequestBody Pet pet){        try {            petService.editPet(pet);            return  ResponseEntity.ok("Pet successfully edited: " + pet);        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (RuntimeException ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }    @DeleteMapping("/delete")    public ResponseEntity <?> deleteMascota (@RequestParam Long idPet){        try {            petService.deletePet(idPet);            return  ResponseEntity.ok("Pet successfully eliminated" );        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (RuntimeException ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }}