package com.mycompany.veterinaria.controller;import com.mycompany.veterinaria.model.Duenho;import com.mycompany.veterinaria.service.IDuenhoService;import jakarta.persistence.EntityNotFoundException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/vet-clinic/owner")public class DuenhoController {    @Autowired    private IDuenhoService duenhoService;    @GetMapping("/get")    @ResponseStatus(HttpStatus.OK)    public List<Duenho> getDuenhos (){        return  duenhoService.getDuenhos();    }    @GetMapping("/get/one")    public ResponseEntity<?> findDuenho (@RequestParam Long idDuenho){        try {            Duenho duenho =duenhoService.findOneDuenho(idDuenho);            return  ResponseEntity.ok(duenho);        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (RuntimeException ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }    @PostMapping("/save")    @ResponseStatus(HttpStatus.CREATED)    public Duenho saveDuenho (@RequestBody Duenho duenho){        return duenhoService.saveDuenho(duenho);    }    @PutMapping ("/edit")    public  ResponseEntity<?>  editDuenho (@RequestBody Duenho duenho){        try{            duenhoService.editDuenho(duenho);            return  ResponseEntity.ok("Dueño editado exitosamente: " + duenhoService.findOneDuenho(duenho.getIdDuenho()));        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (Exception ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }    @DeleteMapping("/delete")    public ResponseEntity<?> deleteDuenho (@RequestParam Long idDuenho){        try{            duenhoService.deleteDuenho(idDuenho);            return  ResponseEntity.ok("Dueño eliminado  exitosamente ");        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (Exception ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }}