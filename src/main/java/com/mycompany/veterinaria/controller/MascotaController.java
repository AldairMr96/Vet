package com.mycompany.veterinaria.controller;import com.mycompany.veterinaria.dto.MascotaDTO;import com.mycompany.veterinaria.model.Duenho;import com.mycompany.veterinaria.model.Mascota;import com.mycompany.veterinaria.service.IMascotaService;import com.mycompany.veterinaria.service.MascotaService;import jakarta.persistence.EntityNotFoundException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/vet-clinic/pet")public class MascotaController {    @Autowired    private IMascotaService mascotaService;    @GetMapping("/get")    @ResponseStatus(HttpStatus.OK)    public List<Mascota> getMascotas (){        return  mascotaService.getMascotas();    }    @GetMapping("/get/onepet")    public ResponseEntity<?> findOneMascota (@RequestParam Long idMascota){        try {            Mascota mascota = mascotaService.findOneMascota(idMascota);            return  ResponseEntity.ok(mascota);        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (RuntimeException ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }    @PostMapping("/save")    @ResponseStatus(HttpStatus.CREATED)    public Mascota saveMascota (@RequestBody Mascota mascota){        return mascotaService.saveMascota(mascota);    }    @PutMapping("/edit")    public ResponseEntity<?>  editMascota (@RequestBody Mascota mascota){        try {            mascotaService.editMascota(mascota);            return  ResponseEntity.ok("Mascota editada exitosamente: " + mascota);        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (RuntimeException ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }    @DeleteMapping("/delete")    public ResponseEntity <?> deleteMascota (@RequestParam Long idMascota){        try {            mascotaService.deleteMascota(idMascota);            return  ResponseEntity.ok("Mascota eliminada exitosamente " );        }catch (EntityNotFoundException ex) {            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());        }catch (RuntimeException ex){            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Server internal Error");        }    }}